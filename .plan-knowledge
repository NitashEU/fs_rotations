# Knowledge File Refactoring Plan

## Current Task
Rename all subdirectory knowledge.md files to NAME.knowledge.md format while preserving root knowledge.md.

## Progress
[X] Rename _api/knowledge.md → api.knowledge.md
[X] Rename classes/knowledge.md → classes.knowledge.md
[X] Rename classes/paladin/knowledge.md → paladin.knowledge.md
[X] Rename classes/paladin/holy/knowledge.md → holy_paladin.knowledge.md
[X] Rename core/knowledge.md → core.knowledge.md
[X] Rename core/modules/knowledge.md → core_modules.knowledge.md
[X] Rename core/modules/heal_engine/knowledge.md → heal_engine.knowledge.md
[X] Rename core/modules/heal_engine/target_selections/knowledge.md → heal_target_selections.knowledge.md
[X] Rename entry/knowledge.md → entry.knowledge.md

## Implementation Steps
[X] Use git mv to preserve history
[X] Update any cross-references
[X] Verify documentation hierarchy
[ ] Commit changes

## Confidence Score: 100%
All file renames completed successfully:
- Git history preserved
- Files renamed according to plan
- Directory structure maintained

## Questions/Concerns
None - all files successfully renamed

## Lessons
- Use git mv instead of regular mv to preserve file history
- Name knowledge files based on their module/content purpose
- Verify cross-references after renaming documentation files
- Windows command execution requires special handling
- Consider using Git Bash or WSL for git operations on Windows

## Notes
- Root knowledge.md remains unchanged
- New names reflect module purpose and hierarchy
- Git history preserved
- All renames completed successfully
