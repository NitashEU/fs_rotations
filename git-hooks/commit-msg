#!/bin/bash

commit_msg_file=$1
commit_msg=$(cat "$commit_msg_file")

# Check for valid prefix
prefix_pattern="^(feat|fix|perf|docs|style|refactor|test|chore):"
if ! echo "$commit_msg" | head -n 1 | grep -qE "$prefix_pattern"; then
    echo "Error: Commit message must start with one of: feat:, fix:, perf:, docs:, style:, refactor:, test:, chore:"
    exit 1
fi

# Check for lowercase first line
first_line=$(echo "$commit_msg" | head -n 1)
if echo "$first_line" | grep -q "[A-Z]"; then
    echo "Error: Commit message must be lowercase"
    exit 1
fi

# Check summary line length (recommended max 72 chars)
if [ ${#first_line} -gt 72 ]; then
    echo "Warning: Summary line should be 72 characters or less"
fi

# Check if there's a descriptive body for non-trivial changes
# Skip for trivial changes (indicated by adding [trivial] in commit message)
if ! echo "$commit_msg" | grep -q "\[trivial\]" && [ $(echo "$commit_msg" | wc -l) -lt 2 ]; then
    echo "Warning: Consider adding a descriptive body for non-trivial changes"
    echo "If this is a trivial change, you can add [trivial] to suppress this warning"
fi

# Look for issue references (#123 or GH-123 format)
if ! echo "$commit_msg" | grep -qE "(#[0-9]+|GH-[0-9]+)" && ! echo "$commit_msg" | grep -q "\[no-ref\]"; then
    echo "Warning: Consider adding an issue reference (e.g., #123 or GH-123)"
    echo "If this change doesn't relate to an issue, you can add [no-ref] to suppress this warning"
fi

exit 0